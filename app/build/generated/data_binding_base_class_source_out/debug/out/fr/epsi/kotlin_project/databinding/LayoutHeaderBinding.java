// Generated by view binder compiler. Do not edit!
package fr.epsi.kotlin_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import fr.epsi.kotlin_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutHeaderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView detail;

  @NonNull
  public final ImageView imageViewBack;

  @NonNull
  public final RelativeLayout layoutHeader;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final TextView textViewTitle;

  private LayoutHeaderBinding(@NonNull LinearLayout rootView, @NonNull ImageView detail,
      @NonNull ImageView imageViewBack, @NonNull RelativeLayout layoutHeader,
      @NonNull ImageView logo, @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.detail = detail;
    this.imageViewBack = imageViewBack;
    this.layoutHeader = layoutHeader;
    this.logo = logo;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detail;
      ImageView detail = ViewBindings.findChildViewById(rootView, id);
      if (detail == null) {
        break missingId;
      }

      id = R.id.imageViewBack;
      ImageView imageViewBack = ViewBindings.findChildViewById(rootView, id);
      if (imageViewBack == null) {
        break missingId;
      }

      id = R.id.layoutHeader;
      RelativeLayout layoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (layoutHeader == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new LayoutHeaderBinding((LinearLayout) rootView, detail, imageViewBack, layoutHeader,
          logo, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
